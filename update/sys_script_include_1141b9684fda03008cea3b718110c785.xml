<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_8080_meetup.wundergroundUtil</api_name>
        <client_callable>true</client_callable>
        <description/>
        <name>wundergroundUtil</name>
        <script><![CDATA[var wundergroundUtil = Class.create();
wundergroundUtil.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	/*
 	*
 	* Lookup location based on Latitude & Longitude
 	* @params latitude, longitude
 	* &returns Location object: city, state, zip
 	*
 	*/
	
	lookupLocation : function(lat,lon){
		try {
			var r = new sn_ws.RESTMessageV2('x_8080_meetup.Get Weather', 'GeoLookup - Lat and Lon');
			r.setStringParameterNoEscape('longitude', lon);
			r.setStringParameterNoEscape('latitude', lat);
			
			//override authentication profile
			//authentication type ='basic'/ 'oauth2'
			//r.setAuthentication(authentication type, profile name);
			
			var response = r.execute();
			var responseBody = JSON.parse(response.getBody());
			var httpStatus = response.getStatusCode();
			
			var location = {
				'city':responseBody.location.city,
				'state':responseBody.location.state,
				'zip':responseBody.location.zip
			};
			return location;
		}
		catch(ex) {
			var message = ex.getMessage();
			gs.addErrorMessage("Error retrieving location, see log for additional details");
			gs.debug(message,'wundergroundUtil');
		}
	},
	
	/*
 	*
 	* Lookup 10-day forecast for specified location
 	* @params city, state
 	* &returns weather object: 10-day forcast
 	*
 	*/
	get10DayForecast : function(city,state){
		try {
			var r = new sn_ws.RESTMessageV2('x_8080_meetup.Get Weather', '10-day Forecast');
			r.setStringParameterNoEscape('state', state);
			r.setStringParameterNoEscape('city', city);
			
			//override authentication profile
			//authentication type ='basic'/ 'oauth2'
			//r.setAuthentication(authentication type, profile name);
			
			var response = r.execute();
			var responseBody = JSON.parse(response.getBody());
			var httpStatus = response.getStatusCode();
			
			var forecast = responseBody.forecast;
			
			return forecast;
		}
		catch(ex) {
			var message = ex.getMessage();
			gs.addErrorMessage("Error retrieving forecast, see log for additional details");
			gs.debug(message,'wundergroundUtil');
		}
	},
	
	type: 'wundergroundUtil'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-11-04 20:16:52</sys_created_on>
        <sys_id>1141b9684fda03008cea3b718110c785</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>wundergroundUtil</sys_name>
        <sys_package display_value="Meetup" source="x_8080_meetup">1b2101504fd203008cea3b718110c78b</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Meetup">1b2101504fd203008cea3b718110c78b</sys_scope>
        <sys_update_name>sys_script_include_1141b9684fda03008cea3b718110c785</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-11-04 20:25:15</sys_updated_on>
    </sys_script_include>
</record_update>
