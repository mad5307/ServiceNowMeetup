<?xml version="1.0" encoding="UTF-8"?>
<record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_8080_meetup_meetup_events</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_8080_meetup_meetup_events">work_startVALCHANGES^ORwork_endVALCHANGES^EQ<item endquery="false" field="work_start" goto="false" newquery="false" operator="VALCHANGES" or="false" value=""/>
            <item endquery="false" field="work_end" goto="false" newquery="false" operator="VALCHANGES" or="true" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message><![CDATA[<p>Start date cannot be in the past</p>]]></message>
        <name>MU - Validate Start and End date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	
	// Add your code here
	
	var today =  new GlideDateTime();
	if(current.work_start && current.work_start < today){
		gs.addErrorMessage("Event start cannot be before today");
		current.setAbortAction(true);
	}
	
	if(current.work_start && current.work_end && current.work_start>current.work_end){
		gs.addErrorMessage("Event end cannot be before Event start");
		current.setAbortAction(true);
	}
	
	if(current.work_end && current.work_end < today){
		gs.addErrorMessage("Event end cannot be before today");
		current.setAbortAction(true);
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-11-03 22:47:43</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>d93c01584fd203008cea3b718110c7cb</sys_id>
        <sys_mod_count>16</sys_mod_count>
        <sys_name>MU - Validate Start and End date</sys_name>
        <sys_overrides/>
        <sys_package display_value="Meetup" source="x_8080_meetup">1b2101504fd203008cea3b718110c78b</sys_package>
        <sys_policy/>
        <sys_scope display_value="Meetup">1b2101504fd203008cea3b718110c78b</sys_scope>
        <sys_update_name>sys_script_d93c01584fd203008cea3b718110c7cb</sys_update_name>
        <sys_updated_by>madeleonardis</sys_updated_by>
        <sys_updated_on>2018-02-21 15:25:37</sys_updated_on>
        <template/>
        <u_update_count/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=d93c01584fd203008cea3b718110c7cb"/>
</record_update>
